<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="38">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"贴字(call前注入)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

4172FB:
jmp 700010
returnhere:

700000:
db 'hello,world', 00

700010:
pushad
mov [GRAPHIC],19FA98
mov eax,[6A72D8]
mov [IMAGEFONT],eax

// 将字符数组创建为std::string
push 700000
mov ecx,TMPSTR
call 404450

// SetFont
mov ecx,[IMAGEFONT]
mov eax,[GRAPHIC]
call 586CB0

// SetSize，性能开销较大
/*
push 9
mov ecx,[IMAGEFONT]
call 58EB50
*/

// StringWidth，调用以防bug
push TMPSTR
mov ecx,[IMAGEFONT]
call 58DF70

// 设置COLOR
push 0 // Blue
mov edx,0 // Green
mov ecx,FF // Red
mov eax,COLOR
call 5643D0

// 设置颜色
mov eax,COLOR
mov ecx,[GRAPHIC]
call 586CC0

// 贴字
push 100
push 100
push TMPSTR
mov eax,[GRAPHIC]
call 587120

// 贴图
push #100
push #100
mov ebx,[6A7788]
mov eax,[GRAPHIC]
call 587150

popad
jmp 41732E
mov edx,[ebp+0C]
jmp returnhere

GRAPHIC:
db 00 00 00 00

IMAGEFONT:
db 00 00 00 00

COLOR:
db 00 00 00 00
db 00 00 00 00
db 00 00 00 00
db 00 00 00 00

TMPSTR:
db 00 00 00 00
 
[DISABLE]
4172FB:
db EB 31 8B 55 0C
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>337</ID>
      <Description>"贴字(call后注入)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

4172F6:
jmp 700010
returnhere:

700000:
db 'hello,world', 00

700010:
pushad
mov [GRAPHIC],19FA98
mov eax,[6A72D8]
mov [IMAGEFONT],eax

// 将字符数组创建为std::string
push 700000
mov ecx,TMPSTR
call 404450

// SetFont
mov ecx,[IMAGEFONT]
mov eax,[GRAPHIC]
call 586CB0

// SetSize，性能开销较大
/*
push 9
mov ecx,[IMAGEFONT]
call 58EB50
*/

// StringWidth，调用以防bug
push TMPSTR
mov ecx,[IMAGEFONT]
call 58DF70

// 设置COLOR
push 0 // Blue
mov edx,0 // Green
mov ecx,FF // Red
mov eax,COLOR
call 5643D0

// 设置颜色
mov eax,COLOR
mov ecx,[GRAPHIC]
call 586CC0

// 贴字
push 100
push 100
push TMPSTR
mov eax,[GRAPHIC]
call 587120

// 贴图
push #100
push #100
mov ebx,[6A7788]
mov eax,[GRAPHIC]
call 587150

popad
call 41AA40
jmp returnhere

GRAPHIC:
db 00 00 00 00

IMAGEFONT:
db 00 00 00 00

COLOR:
db 00 00 00 00
db 00 00 00 00
db 00 00 00 00
db 00 00 00 00

TMPSTR:
db 00 00 00 00
 
[DISABLE]
4172FB:
call 41AA40
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>338</ID>
      <Description>"贴字(pvzclass)"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

4172F6:
jmp 700000
returnhere:

700000:
pushad
mov [ADDRESS],700200
mov [GRAPHIC],19FA98
mov eax,[6A72EC]
mov [IMAGEFONT],eax
mov [LASTSIZE],0

while:
// 判定是否结束
mov ebx,[ADDRESS]
add ebx,18
cmp [ebx],0
je finish

// 将字符数组创建为std::string
push ebx
mov ecx,TMPSTR
call 404450

cmp [LASTSIZE],0
jne nobug

// 设置Graphic字体
mov ecx,[IMAGEFONT]
mov eax,[GRAPHIC]
call 586CB0

// StringWidth，调用以防bug
push TMPSTR
mov ecx,[IMAGEFONT]
call 58DF70

// 设置Graphic颜色
mov eax,COLOR
mov ecx,[GRAPHIC]
call 586CC0

// 设置字体大小
nobug:
/*
mov ebx,[ADDRESS]
mov ebx,[ebx+8]
cmp ebx,[LASTSIZE]
je nosetsize
push ebx
mov [LASTSIZE],ebx
mov ecx,[IMAGEFONT]
call 58EB50
*/

// 设置COLOR
nosetsize:
mov ebx,[ADDRESS]
push [ebx+14] // Blue
mov edx,[ebx+10] // Green
mov ecx,[ebx+C] // Red
mov eax,COLOR
call 5643D0

// 贴字
mov ebx,[ADDRESS]
push [ebx+4]
push [ebx]
push TMPSTR
mov eax,[GRAPHIC]
call 587120

add [ADDRESS],80
jmp while

finish:
popad
call 41AA40
jmp returnhere

ADDRESS:
db 00 00 00 00

GRAPHIC:
db 00 00 00 00

IMAGEFONT:
db 00 00 00 00

LASTSIZE:
db 00 00 00 00

COLOR:
db 00 00 00 00
db 00 00 00 00
db 00 00 00 00
db 00 00 00 00

TMPSTR:
db 00 00 00 00
 
[DISABLE]
4172FB:
call 41AA40
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>339</ID>
      <Description>"贴字(不改变大小)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

4172F6:
jmp 700000
returnhere:

700000:
pushad
mov [ADDRESS],700200
mov [GRAPHIC],19FA98
mov eax,[6A72EC]
mov [IMAGEFONT],eax

// 设置Graphic字体
mov ecx,[IMAGEFONT]
mov eax,[GRAPHIC]
call 586CB0

// 创建临时string对象
push [ADDRESS]
mov ecx,TMPSTR
call 404450

// StringWidth，调用以防bug
push TMPSTR
mov ecx,[IMAGEFONT]
call 58DF70

// 创建临时COLOR对象
push FF
mov edx,FF
mov ecx,FF
mov eax,COLOR
call 5643D0

// 设置Graphic颜色
mov eax,COLOR
mov ecx,[GRAPHIC]
call 586CC0

while:
// 判定是否结束
mov ebx,[ADDRESS]
add ebx,18
cmp [ebx],0
je finish

// 将字符数组创建为string
push ebx
mov ecx,TMPSTR
call 404450

// 设置COLOR
mov ebx,[ADDRESS]
push [ebx+14] // Blue
mov edx,[ebx+10] // Green
mov ecx,[ebx+C] // Red
mov eax,COLOR
call 5643D0

// 贴字
mov ebx,[ADDRESS]
push [ebx+4]
push [ebx]
push TMPSTR
mov eax,[GRAPHIC]
call 587120

add [ADDRESS],80
jmp while

finish:
popad
call 41AA40
jmp returnhere

ADDRESS:
db 00 00 00 00

GRAPHIC:
db 00 00 00 00

IMAGEFONT:
db 00 00 00 00

COLOR:
db 00 00 00 00
db 00 00 00 00
db 00 00 00 00
db 00 00 00 00

TMPSTR:
db 00 00 00 00
 
[DISABLE]
4172FB:
call 41AA40
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
